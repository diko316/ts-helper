{"version":3,"file":"get-decorator-call-info.function.mjs","sources":["../../lib/decorator/get-decorator-call-info.function.ts"],"sourcesContent":["import { AnyClass, ClassInstance } from '../misc';\nimport { is } from '../validation';\n\nimport {\n  DECORATOR_TYPE_ACCESSOR,\n  DECORATOR_TYPE_CLASS,\n  DECORATOR_TYPE_METHOD,\n  DECORATOR_TYPE_PARAMETER,\n  DECORATOR_TYPE_PROPERTY,\n  DECORATOR_TYPE_STATIC_ACCESSOR,\n  DECORATOR_TYPE_STATIC_METHOD,\n  DECORATOR_TYPE_STATIC_PARAMETER,\n  DECORATOR_TYPE_STATIC_PROPERTY,\n} from './create-decorator.constant';\n\nimport {\n  AccessorDecoratorInfo,\n  ClassDecoratorInfo,\n  DecoratorCallParameters,\n  MethodDecoratorInfo,\n  ParameterDecoratorInfo,\n  PropertyDecoratorInfo,\n  StaticAccessorDecoratorInfo,\n  StaticMethodDecoratorInfo,\n  StaticParameterDecoratorInfo,\n  StaticPropertyDecoratorInfo,\n} from './get-decorator-call-info.type';\n\nexport function getDecoratorCallInfo<Class extends AnyClass>([\n  target,\n  property,\n  descriptorOrIndex,\n]: DecoratorCallParameters<Class>):\n  | null\n  | ClassDecoratorInfo<Class>\n  | PropertyDecoratorInfo<Class>\n  | StaticPropertyDecoratorInfo<Class>\n  | MethodDecoratorInfo<Class>\n  | StaticMethodDecoratorInfo<Class>\n  | AccessorDecoratorInfo<Class>\n  | StaticAccessorDecoratorInfo<Class>\n  | ParameterDecoratorInfo<Class>\n  | StaticParameterDecoratorInfo<Class> {\n  //////// For Class Target\n  if (is<Class>(Function, target)) {\n    // indeed a class target if no property\n    if (!property || !is(String, property)) {\n      return {\n        type: DECORATOR_TYPE_CLASS,\n        target,\n      };\n    }\n\n    // if has 3rd parameter is index, then it's a static\n    if (is(Number, descriptorOrIndex)) {\n      return {\n        type: DECORATOR_TYPE_STATIC_PARAMETER,\n        target,\n        property,\n        index: descriptorOrIndex,\n      };\n    }\n\n    // if 3rd parameter is poperty descriptor\n    if (is<PropertyDescriptor>(Object, descriptorOrIndex)) {\n      // if descriptor value is function, then it's a method decorator call\n      if (is(Function, descriptorOrIndex.value)) {\n        return {\n          type: DECORATOR_TYPE_STATIC_METHOD,\n          target,\n          property,\n          descriptor: descriptorOrIndex,\n        };\n      }\n\n      // if not, this is an accessor decorator call\n      return {\n        type: DECORATOR_TYPE_STATIC_ACCESSOR,\n        target,\n        property,\n        descriptor: descriptorOrIndex,\n      };\n    }\n\n    // or if only property exists, then this is a property decorator call\n    return {\n      type: DECORATOR_TYPE_STATIC_PROPERTY,\n      target,\n      property,\n    };\n  }\n\n  // if target is not an object or property is empty, then this is invalid\n  if (!is<ClassInstance<Class>>(Object, target) || !property) {\n    return null;\n  }\n\n  //////// For Prototype Target\n\n  // if has 3rd parameter is index, then it's a static\n  if (is(Number, descriptorOrIndex)) {\n    return {\n      type: DECORATOR_TYPE_PARAMETER,\n      target,\n      property,\n      index: descriptorOrIndex,\n    };\n  }\n\n  // if 3rd parameter is poperty descriptor\n  if (is<PropertyDescriptor>(Object, descriptorOrIndex)) {\n    // if descriptor value is function, then it's a method decorator call\n    if (is(Function, descriptorOrIndex.value)) {\n      return {\n        type: DECORATOR_TYPE_METHOD,\n        target,\n        property,\n        descriptor: descriptorOrIndex,\n      };\n    }\n\n    // if not, this is an accessor decorator call\n    return {\n      type: DECORATOR_TYPE_ACCESSOR,\n      target,\n      property,\n      descriptor: descriptorOrIndex,\n    };\n  }\n\n  // or if only property exists, then this is a property decorator call\n  return {\n    type: DECORATOR_TYPE_PROPERTY,\n    target,\n    property,\n  };\n}\n"],"names":[],"mappings":";;;;AA4BM,SAAU,oBAAoB,CAAyB,CAC3D,MAAM,EACN,QAAQ,EACR,iBAAiB,EACc,EAAA;;AAY/B,IAAA,IAAI,EAAE,CAAQ,QAAQ,EAAE,MAAM,CAAC,EAAE;;QAE/B,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE;YACtC,OAAO;AACL,gBAAA,IAAI,EAAE,oBAAoB;gBAC1B,MAAM;aACP,CAAC;AACH,SAAA;;AAGD,QAAA,IAAI,EAAE,CAAC,MAAM,EAAE,iBAAiB,CAAC,EAAE;YACjC,OAAO;AACL,gBAAA,IAAI,EAAE,+BAA+B;gBACrC,MAAM;gBACN,QAAQ;AACR,gBAAA,KAAK,EAAE,iBAAiB;aACzB,CAAC;AACH,SAAA;;AAGD,QAAA,IAAI,EAAE,CAAqB,MAAM,EAAE,iBAAiB,CAAC,EAAE;;YAErD,IAAI,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC,KAAK,CAAC,EAAE;gBACzC,OAAO;AACL,oBAAA,IAAI,EAAE,4BAA4B;oBAClC,MAAM;oBACN,QAAQ;AACR,oBAAA,UAAU,EAAE,iBAAiB;iBAC9B,CAAC;AACH,aAAA;;YAGD,OAAO;AACL,gBAAA,IAAI,EAAE,8BAA8B;gBACpC,MAAM;gBACN,QAAQ;AACR,gBAAA,UAAU,EAAE,iBAAiB;aAC9B,CAAC;AACH,SAAA;;QAGD,OAAO;AACL,YAAA,IAAI,EAAE,8BAA8B;YACpC,MAAM;YACN,QAAQ;SACT,CAAC;AACH,KAAA;;IAGD,IAAI,CAAC,EAAE,CAAuB,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC1D,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;;;AAKD,IAAA,IAAI,EAAE,CAAC,MAAM,EAAE,iBAAiB,CAAC,EAAE;QACjC,OAAO;AACL,YAAA,IAAI,EAAE,wBAAwB;YAC9B,MAAM;YACN,QAAQ;AACR,YAAA,KAAK,EAAE,iBAAiB;SACzB,CAAC;AACH,KAAA;;AAGD,IAAA,IAAI,EAAE,CAAqB,MAAM,EAAE,iBAAiB,CAAC,EAAE;;QAErD,IAAI,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC,KAAK,CAAC,EAAE;YACzC,OAAO;AACL,gBAAA,IAAI,EAAE,qBAAqB;gBAC3B,MAAM;gBACN,QAAQ;AACR,gBAAA,UAAU,EAAE,iBAAiB;aAC9B,CAAC;AACH,SAAA;;QAGD,OAAO;AACL,YAAA,IAAI,EAAE,uBAAuB;YAC7B,MAAM;YACN,QAAQ;AACR,YAAA,UAAU,EAAE,iBAAiB;SAC9B,CAAC;AACH,KAAA;;IAGD,OAAO;AACL,QAAA,IAAI,EAAE,uBAAuB;QAC7B,MAAM;QACN,QAAQ;KACT,CAAC;AACJ;;;;"}