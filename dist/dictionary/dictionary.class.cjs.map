{"version":3,"file":"dictionary.class.cjs","sources":["../../lib/dictionary/dictionary.class.ts"],"sourcesContent":["import { is } from '../validation';\nimport { AnyType } from '../misc';\nimport { ObjectToStringTag } from '../symbol';\n\nimport {\n  DictionaryElementCursor,\n  DictionaryInput,\n  DictionaryInputElement,\n  DictionaryList,\n  DictionaryState,\n  Dictionary as DictionaryModel,\n  DictionaryInputBuffer,\n} from './dictionary.type';\n\nimport { DictionaryIterator } from './dictionary-iterator.class';\n\n@ObjectToStringTag('Dictionary')\nexport class Dictionary<Item extends DictionaryInput<AnyType>>\n  implements DictionaryModel<Item>\n{\n  protected readonly entryState: DictionaryState<DictionaryInputElement<Item>> =\n    new Map();\n\n  protected readonly endStates: Map<\n    DictionaryState<DictionaryInputElement<Item>>,\n    DictionaryInputBuffer<Item>\n  > = new Map();\n\n  get size(): number {\n    return this.endStates.size;\n  }\n\n  [Symbol.iterator](): Iterator<Item, Item, Item | undefined> {\n    return new DictionaryIterator(this);\n  }\n\n  list(): DictionaryList<Item> {\n    const ends = this.endStates;\n\n    const found: DictionaryList<Item> = [];\n    let count = 0;\n\n    const iterator = ends.keys();\n\n    for (\n      let { done, value } = iterator.next();\n      !done;\n      { done, value } = iterator.next()\n    ) {\n      found[count++] = ends.get(value)?.slice(0) || [];\n    }\n\n    return found;\n  }\n\n  has<Items extends DictionaryInputBuffer<Item>>(set: Items): set is Items {\n    if (!is<Items>(Array, set)) {\n      return false;\n    }\n\n    let length = set.length;\n\n    if (!length) {\n      return false;\n    }\n\n    let state = this.entryState;\n\n    // find until end of list\n    for (let c = 0; length--; c++) {\n      const value = set[c];\n\n      if (!state.has(value)) {\n        return false;\n      }\n\n      state = state.get(value) as DictionaryState<Item>;\n    }\n\n    return this.endStates.has(state);\n  }\n\n  add<Items extends DictionaryInputBuffer<Item>>(set: Items): this {\n    if (!is(Array, set)) {\n      throw new TypeError();\n    }\n\n    let length = set.length;\n\n    if (!length) {\n      return this;\n    }\n\n    let state = this.entryState;\n\n    for (let c = 0; length--; c++) {\n      const value = set[c];\n\n      if (state.has(value)) {\n        state = state.get(value) as DictionaryState<Item>;\n        continue;\n      }\n\n      state.set(value, (state = new Map()));\n    }\n\n    // register end state\n    const ends = this.endStates;\n    if (!ends.has(state)) {\n      ends.set(state, [...set]);\n    }\n\n    return this;\n  }\n\n  remove<Items extends DictionaryInputBuffer<Item>>(set: Items): this {\n    if (!is(Array, set)) {\n      return this;\n    }\n\n    let length = set.length;\n\n    if (!length) {\n      return this;\n    }\n\n    const buffer: DictionaryElementCursor<Item> = [];\n    let value: DictionaryInputElement<Item>;\n    let bufferCount = 0;\n    let failed = false;\n    let state = this.entryState;\n\n    // find until end of list\n    for (let c = 0; length--; c++) {\n      value = set[c];\n\n      // not found\n      if (!state.has(value)) {\n        failed = true;\n        break;\n      }\n\n      buffer[bufferCount++] = [state, value];\n      state = state.get(value) as DictionaryState<Item>;\n    }\n\n    const ends = this.endStates;\n\n    // end state not found!\n    if (!ends.has(state) || failed) {\n      buffer.splice(0, bufferCount);\n      return this;\n    }\n\n    // unset buffer\n    const endStateBuffer = ends.get(state);\n\n    endStateBuffer?.splice(0, endStateBuffer.length);\n    ends.delete(state);\n\n    for (; bufferCount--; ) {\n      [state, value] = buffer[bufferCount];\n      const target = state.get(value) as DictionaryState<Item>;\n\n      if (target.size || ends.has(target)) {\n        break;\n      }\n\n      // delete!\n      state.delete(value);\n    }\n\n    buffer.splice(0, bufferCount);\n\n    return this;\n  }\n\n  clear(): this {\n    const buffer: Array<DictionaryState<Item>> = [this.entryState];\n    let bufferCount = 1;\n\n    for (; bufferCount; ) {\n      const node = buffer[bufferCount - 1];\n\n      if (!node.size) {\n        buffer.length = --bufferCount;\n        continue;\n      }\n\n      const nodeIterator = node.keys();\n\n      for (\n        let { done, value: key } = nodeIterator.next();\n        !done;\n        { done, value: key } = nodeIterator.next()\n      ) {\n        const value = node.get(key);\n\n        if (value?.size) {\n          buffer[bufferCount++] = value;\n          continue;\n        }\n        node.delete(key);\n      }\n    }\n\n    const ends = this.endStates;\n    const endsIterator = ends.keys();\n\n    for (\n      let { done, value: state } = endsIterator.next();\n      !done;\n      { done, value: state } = endsIterator.next()\n    ) {\n      const item = ends.get(state);\n\n      if (item) {\n        item.splice(0, item.length);\n      }\n\n      ends.delete(state);\n    }\n\n    return this;\n  }\n\n  itemAt(index: number): DictionaryInputBuffer<Item> | undefined {\n    if (index < 0) {\n      return;\n    }\n\n    const ends = this.endStates;\n\n    if (index >= ends.size) {\n      return;\n    }\n\n    const iterator = ends.keys();\n\n    for (\n      let c = 0, result = iterator.next();\n      !result.done;\n      result = iterator.next()\n    ) {\n      // found!\n      if (c++ === index) {\n        return ends.get(result.value)?.slice(0) || [];\n      }\n    }\n\n    return;\n  }\n\n  indexOf<Items extends DictionaryInputBuffer<Item>>(set: Items): number {\n    if (!is<Items>(Array, set)) {\n      return -1;\n    }\n\n    let length = set.length;\n\n    if (!length) {\n      return -1;\n    }\n\n    let state = this.entryState;\n\n    // find until end of list\n    for (let c = 0; length--; c++) {\n      const value = set[c];\n\n      if (!state.has(value)) {\n        return -1;\n      }\n\n      state = state.get(value) as DictionaryState<Item>;\n    }\n\n    // find index via ends Order\n    const ends = this.endStates;\n    const iterator = ends.keys();\n\n    for (\n      let index = 0, result = iterator.next();\n      !result.done;\n      result = iterator.next()\n    ) {\n      // found!\n      if (result.value === state) {\n        return index;\n      }\n\n      index++;\n    }\n\n    return -1;\n  }\n\n  toString(): string {\n    return `Dictionary ${JSON.stringify(this.list())}`;\n  }\n\n  toJSON(): string {\n    return `Dictionary ${JSON.stringify(this.list())}`;\n  }\n}\n"],"names":["Dictionary","DictionaryIterator","const","let","is","done","__decorate","ObjectToStringTag"],"mappings":"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"}