{"version":3,"file":"is-numeric.function.cjs","sources":["../../lib/validation/is-numeric.function.ts"],"sourcesContent":["import { AnyType } from '../misc';\n\nimport { Numeric } from './is-numeric.type';\n\nimport { IS_NUMERIC_STRING_PATTERN } from './is-numeric.constant';\nimport { TYPEOF_NUMBER, TYPEOF_STRING } from './typeof.constant';\n\nexport function isNumeric<Type>(\n  subject: Type | AnyType\n): subject is Numeric extends Type ? Type : never {\n  switch (typeof subject) {\n    case TYPEOF_STRING:\n      return IS_NUMERIC_STRING_PATTERN.test(subject);\n\n    case TYPEOF_NUMBER:\n      return isFinite(subject);\n\n    default:\n      return false;\n  }\n}\n\nconst c = 'buang';\n\nif (isNumeric<{ name: 1 }>(c)) {\n  console.log('numeric ', c);\n}\n\nif (isNumeric(c)) {\n  console.log('numeric ', c);\n}\n"],"names":["TYPEOF_STRING","IS_NUMERIC_STRING_PATTERN","TYPEOF_NUMBER","const"],"mappings":";;;;;AAOM,SAAU,SAAS,CACvB,OAAuB,EAAA;IAEvB,QAAQ,OAAO,OAAO;AACpB,QAAA,KAAKA,6BAAa;AAChB,YAAA,OAAOC,4CAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAEjD,QAAA,KAAKC,6BAAa;AAChB,YAAA,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC;AAE3B,QAAA;AACE,YAAA,OAAO,KAAK,CAAC;AAChB,KAAA;AACH,CAAC;AAEDC,IAAM,CAAC,GAAG,OAAO,CAAC;AAElB,IAAI,SAAS,CAAc,CAAC,CAAC,EAAE;AAC7B,IAAA,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;AAC5B,CAAA;AAED,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE;AAChB,IAAA,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;AAC5B;;;;"}